//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MultiplyMatrixClient.MultiplyMatrixServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Matrix", Namespace="http://schemas.datacontract.org/2004/07/MultiplyMatrixServer")]
    [System.SerializableAttribute()]
    public partial class Matrix : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ColsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double[][] MatrixContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RowsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Cols {
            get {
                return this.ColsField;
            }
            set {
                if ((this.ColsField.Equals(value) != true)) {
                    this.ColsField = value;
                    this.RaisePropertyChanged("Cols");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double[][] MatrixContent {
            get {
                return this.MatrixContentField;
            }
            set {
                if ((object.ReferenceEquals(this.MatrixContentField, value) != true)) {
                    this.MatrixContentField = value;
                    this.RaisePropertyChanged("MatrixContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Rows {
            get {
                return this.RowsField;
            }
            set {
                if ((this.RowsField.Equals(value) != true)) {
                    this.RowsField = value;
                    this.RaisePropertyChanged("Rows");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MultiplyMatrixServiceReference.IMultiplyMatrixService")]
    public interface IMultiplyMatrixService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMultiplyMatrixService/GetMatrix", ReplyAction="http://tempuri.org/IMultiplyMatrixService/GetMatrixResponse")]
        MultiplyMatrixClient.MultiplyMatrixServiceReference.Matrix GetMatrix(string mFileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMultiplyMatrixService/GetMatrix", ReplyAction="http://tempuri.org/IMultiplyMatrixService/GetMatrixResponse")]
        System.Threading.Tasks.Task<MultiplyMatrixClient.MultiplyMatrixServiceReference.Matrix> GetMatrixAsync(string mFileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMultiplyMatrixService/AddMatrix", ReplyAction="http://tempuri.org/IMultiplyMatrixService/AddMatrixResponse")]
        string AddMatrix(MultiplyMatrixClient.MultiplyMatrixServiceReference.Matrix matrix);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMultiplyMatrixService/AddMatrix", ReplyAction="http://tempuri.org/IMultiplyMatrixService/AddMatrixResponse")]
        System.Threading.Tasks.Task<string> AddMatrixAsync(MultiplyMatrixClient.MultiplyMatrixServiceReference.Matrix matrix);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMultiplyMatrixService/MultiplyMatrix", ReplyAction="http://tempuri.org/IMultiplyMatrixService/MultiplyMatrixResponse")]
        string MultiplyMatrix(string m1FileName, string m2Filename);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMultiplyMatrixService/MultiplyMatrix", ReplyAction="http://tempuri.org/IMultiplyMatrixService/MultiplyMatrixResponse")]
        System.Threading.Tasks.Task<string> MultiplyMatrixAsync(string m1FileName, string m2Filename);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMultiplyMatrixServiceChannel : MultiplyMatrixClient.MultiplyMatrixServiceReference.IMultiplyMatrixService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MultiplyMatrixServiceClient : System.ServiceModel.ClientBase<MultiplyMatrixClient.MultiplyMatrixServiceReference.IMultiplyMatrixService>, MultiplyMatrixClient.MultiplyMatrixServiceReference.IMultiplyMatrixService {
        
        public MultiplyMatrixServiceClient() {
        }
        
        public MultiplyMatrixServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MultiplyMatrixServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MultiplyMatrixServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MultiplyMatrixServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MultiplyMatrixClient.MultiplyMatrixServiceReference.Matrix GetMatrix(string mFileName) {
            return base.Channel.GetMatrix(mFileName);
        }
        
        public System.Threading.Tasks.Task<MultiplyMatrixClient.MultiplyMatrixServiceReference.Matrix> GetMatrixAsync(string mFileName) {
            return base.Channel.GetMatrixAsync(mFileName);
        }
        
        public string AddMatrix(MultiplyMatrixClient.MultiplyMatrixServiceReference.Matrix matrix) {
            return base.Channel.AddMatrix(matrix);
        }
        
        public System.Threading.Tasks.Task<string> AddMatrixAsync(MultiplyMatrixClient.MultiplyMatrixServiceReference.Matrix matrix) {
            return base.Channel.AddMatrixAsync(matrix);
        }
        
        public string MultiplyMatrix(string m1FileName, string m2Filename) {
            return base.Channel.MultiplyMatrix(m1FileName, m2Filename);
        }
        
        public System.Threading.Tasks.Task<string> MultiplyMatrixAsync(string m1FileName, string m2Filename) {
            return base.Channel.MultiplyMatrixAsync(m1FileName, m2Filename);
        }
    }
}
